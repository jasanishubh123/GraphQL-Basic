{
  "{\"sourceRoot\":\"/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic\",\"filename\":\"/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic/src/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic",
      "filename": "/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic/src/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic/src/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _graphqlYoga = require(\"graphql-yoga\");\n\nvar users = [{\n  id: '123423',\n  name: 'Jay',\n  email: \"jay@gmail.com\",\n  age: 23\n}, {\n  id: '22121',\n  name: 'Shivam',\n  email: \"shivam@gmail.com\",\n  age: 22\n}];\nvar _posts = [{\n  id: \"01\",\n  title: \"My GraphQL third\",\n  body: \"Second Post\",\n  published: false,\n  author: \"123423\"\n}, {\n  id: \"02\",\n  title: \"My Nodejs\",\n  body: \"third Post\",\n  published: false,\n  author: \"22121\"\n}, {\n  id: \"03\",\n  title: \"My JS\",\n  body: \"fourth Post\",\n  published: false,\n  author: \"22121\"\n}];\nvar _comments = [{\n  id: \"001\",\n  text: \"Nice Picssss 1\",\n  user: \"123423\",\n  post: \"01\"\n}, {\n  id: \"002\",\n  text: \"Nice Picssss 2\",\n  user: \"123423\",\n  post: \"02\"\n}, {\n  id: \"003\",\n  text: \"Nice Picssss 3\",\n  user: \"22121\",\n  post: \"02\"\n}, {\n  id: \"004\",\n  text: \"Nice Picssss 4\",\n  user: \"22121\",\n  post: \"03\"\n}]; //Scalar Type - String , Booloean , Int ,Float, ID (unique Identifier)\n// type definition (Schema)\n\nvar typeDefs = \"\\n        type Query {\\n            greeting(name: String , position:String):String!\\n            me: User!\\n            post :Post!\\n            sum(a:Float!,b:Float!):Float!\\n            grades:[String!]!\\n            allPost(query:String):[Post!]!\\n            allUser(query:String):[User!]!\\n            comments:[Comment!]!\\n        }\\n        type User {  \\n            id:ID!\\n            name:String!\\n            email:String!\\n            age:Int\\n            posts:[Post!]!\\n            comments:[Comment!]!\\n\\n        }\\n\\n        type Post {\\n            id:ID!\\n            title:String!\\n            body:String!\\n            published:Boolean!\\n            author:User!\\n            comments:[Comment!]!\\n\\n        }\\n\\n        type Comment {\\n            id:ID!\\n            text:String!\\n            user:User!\\n            post:Post!\\n        }\\n    \"; // Resolver\n\nvar resolvers = {\n  Query: {\n    me: function me() {\n      return {\n        id: '123423',\n        name: 'Jay',\n        email: \"jay@gmail.com\",\n        age: 23\n      };\n    },\n    post: function post() {\n      return {\n        id: \"1221\",\n        title: \"My Post\",\n        body: \"First Post\",\n        published: false,\n        author: \"123423\"\n      };\n    },\n    greeting: function greeting(parent, args, ctx, info) {\n      if (args.name && args.position) return \"Hello \" + args.name + \" \" + args.position;else return \"Hello\";\n    },\n    sum: function sum(parent, args, ctx, info) {\n      if (args.a && args.b) {\n        return args.a + args.b;\n      } else {\n        return 0;\n      }\n    },\n    grades: function grades(parent, args, ctx, info) {\n      return [\"Shubham\", \"Jasani\", \"Okay\"];\n    },\n    allUser: function allUser(parent, args, ctx, info) {\n      if (args.query) {\n        return users.filter(function (user) {\n          return user.name.toLowerCase().includes(args.query.toLowerCase());\n        });\n      } else return users;\n    },\n    allPost: function allPost(parent, args, ctx, info) {\n      if (args.query) {\n        return _posts.filter(function (post) {\n          return post.title.toLowerCase().includes(args.query.toLowerCase()) || post.body.toLowerCase().includes(args.query.toLowerCase());\n        });\n      } else return _posts;\n    },\n    comments: function comments() {\n      return _comments;\n    }\n  },\n  Post: {\n    author: function author(parent, args, ctx, info) {\n      return users.find(function (user) {\n        return user.id === parent.author;\n      });\n    },\n    comments: function comments(parent, args, ctx, info) {\n      return _comments.filter(function (com) {\n        return com.post === parent.id;\n      });\n    }\n  },\n  User: {\n    posts: function posts(parent, args, ctx, info) {\n      console.log(parent);\n      return _posts.filter(function (post) {\n        return post.author === parent.id;\n      });\n    },\n    comments: function comments(parent, args, ctx, info) {\n      return _comments.filter(function (coms) {\n        return coms.user === parent.id;\n      });\n    }\n  },\n  Comment: {\n    user: function user(parent, args, ctx, info) {\n      return users.find(function (user) {\n        return user.id === parent.user;\n      });\n    },\n    post: function post(parent, args, ctx, info) {\n      return _posts.find(function (post) {\n        return post.id === parent.post;\n      });\n    }\n  }\n};\nvar server = new _graphqlYoga.GraphQLServer({\n  typeDefs: typeDefs,\n  resolvers: resolvers\n});\nserver.start(function () {\n  console.log(\"Server Start\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "users",
        "id",
        "name",
        "email",
        "age",
        "posts",
        "title",
        "body",
        "published",
        "author",
        "comments",
        "text",
        "user",
        "post",
        "typeDefs",
        "resolvers",
        "Query",
        "me",
        "greeting",
        "parent",
        "args",
        "ctx",
        "info",
        "position",
        "sum",
        "a",
        "b",
        "grades",
        "allUser",
        "query",
        "filter",
        "toLowerCase",
        "includes",
        "allPost",
        "Post",
        "find",
        "com",
        "User",
        "console",
        "log",
        "coms",
        "Comment",
        "server",
        "GraphQLServer",
        "start"
      ],
      "mappings": "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",
      "sourceRoot": "/home/shubham/Documents/Projects/GraphQL-Start/graphql-basic/src/",
      "sourcesContent": [
        "import { GraphQLServer } from 'graphql-yoga'\n\n\nconst users=[\n    {\n        id: '123423',\n        name: 'Jay',\n        email: \"jay@gmail.com\",\n        age: 23\n    },\n    {\n        id: '22121',\n        name: 'Shivam',\n        email: \"shivam@gmail.com\",\n        age: 22\n    }\n\n]\n\nconst posts=[\n    {\n        id: \"01\",\n        title: \"My GraphQL third\",\n        body: \"Second Post\",\n        published: false,\n        author:\"123423\"\n    },\n    {\n        id: \"02\",\n        title: \"My Nodejs\",\n        body: \"third Post\",\n        published: false,\n        author:\"22121\"\n    },\n    {\n        id: \"03\",\n        title: \"My JS\",\n        body: \"fourth Post\",\n        published: false,\n        author:\"22121\"\n    }\n\n]\n\nconst comments=[\n    {\n        id:\"001\",\n        text:\"Nice Picssss 1\",\n        user:\"123423\",\n        post:\"01\"\n\n    },\n\n    {\n        id:\"002\",\n        text:\"Nice Picssss 2\" ,\n        user:\"123423\",\n        post:\"02\"\n\n    },\n\n    {\n        id:\"003\",\n        text:\"Nice Picssss 3\",\n        user:\"22121\",\n        post:\"02\"\n\n    },\n\n    {\n        id:\"004\",\n        text:\"Nice Picssss 4\",\n        user:\"22121\",\n        post:\"03\"\n\n\n\n    }\n]\n\n\n//Scalar Type - String , Booloean , Int ,Float, ID (unique Identifier)\n\n\n// type definition (Schema)\nconst typeDefs = `\n        type Query {\n            greeting(name: String , position:String):String!\n            me: User!\n            post :Post!\n            sum(a:Float!,b:Float!):Float!\n            grades:[String!]!\n            allPost(query:String):[Post!]!\n            allUser(query:String):[User!]!\n            comments:[Comment!]!\n        }\n        type User {  \n            id:ID!\n            name:String!\n            email:String!\n            age:Int\n            posts:[Post!]!\n            comments:[Comment!]!\n\n        }\n\n        type Post {\n            id:ID!\n            title:String!\n            body:String!\n            published:Boolean!\n            author:User!\n            comments:[Comment!]!\n\n        }\n\n        type Comment {\n            id:ID!\n            text:String!\n            user:User!\n            post:Post!\n        }\n    `\n\n\n\n// Resolver\n\nconst resolvers = {\n    Query: {\n        me: () => {\n            return {\n                id: '123423',\n                name: 'Jay',\n                email: \"jay@gmail.com\",\n                age: 23\n\n            }\n        },\n        post: () => {\n            return {\n                id: \"1221\",\n                title: \"My Post\",\n                body: \"First Post\",\n                published: false,\n                author:\"123423\"\n            }\n        },\n        greeting: (parent, args, ctx, info) => {\n            if (args.name && args.position)\n                return \"Hello \" + args.name + \" \" + args.position\n            else return \"Hello\"\n        },\n        sum: (parent, args, ctx, info) => {\n            if (args.a && args.b) {\n                return args.a + args.b\n            } else {\n                return 0\n            }\n        },\n        grades: (parent, args, ctx, info) => {\n            return [\"Shubham\", \"Jasani\", \"Okay\"]\n        },\n        allUser: (parent, args, ctx, info) => {\n           \n            if(args.query){\n               return users.filter((user)=>{\n                   return  user.name.toLowerCase().includes(args.query.toLowerCase())\n                })\n            }else\n            return users\n\n            \n\n        },\n        allPost: (parent, args, ctx, info) => {\n           \n\n            if(args.query){\n               return posts.filter((post)=>{\n                   return  post.title.toLowerCase().includes(args.query.toLowerCase()) ||\n                   post.body.toLowerCase().includes(args.query.toLowerCase())\n                })\n            }else\n            return posts\n\n            \n\n        },\n        comments:()=>{\n            return comments\n        }\n\n\n\n    },\n    Post:{\n        author:(parent, args, ctx, info)=>{\n           return  users.find((user)=>{\n                return user.id===parent.author\n           })\n        },\n        comments:(parent, args, ctx, info)=>{\n            return comments.filter((com)=>{\n                return com.post===parent.id\n            })\n        }\n\n    },\n    User:{\n        posts:(parent, args, ctx, info)=>{\n            console.log(parent)\n            return posts.filter((post)=>{\n                return post.author===parent.id \n            })  \n        },\n        comments:(parent, args, ctx, info)=>{\n            return comments.filter((coms)=>{\n                return coms.user===parent.id\n            })\n        }\n    },\n    Comment:{\n        user:(parent, args, ctx, info)=>{\n            return users.find((user)=>{\n                return user.id===parent.user \n            }) \n        },\n        post:(parent, args, ctx, info)=>{\n            return posts.find((post)=>{\n                return post.id===parent.post\n            })\n        }\n    }\n\n}\n\nconst server = new GraphQLServer({\n    typeDefs,\n    resolvers,\n})\n\nserver.start(() => {\n    console.log(\"Server Start\")\n})\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597063892281
  }
}